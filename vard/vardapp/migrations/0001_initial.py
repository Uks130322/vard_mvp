# Generated by Django 4.2.11 on 2024-03-18 19:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('name', models.CharField(max_length=255, verbose_name='name of user')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email of user')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='date of dign up')),
                ('date_password_change', models.DateTimeField(auto_now=True, verbose_name='date of password change')),
                ('password', models.CharField(max_length=255, verbose_name='password')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AccessType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_type', models.IntegerField(choices=[(1, 'READER'), (2, 'OWNER'), (3, 'COMMENTATOR'), (4, 'EDITOR')])),
            ],
        ),
        migrations.CreateModel(
            name='Charts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='date of creation')),
                ('date_change', models.DateTimeField(auto_now=True, verbose_name='date of change')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user id')),
            ],
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_send', models.DateTimeField(auto_now_add=True, verbose_name='date of send')),
                ('date_remove', models.DateTimeField(auto_now_add=True, verbose_name='date of remove')),
                ('date_delivery', models.DateTimeField(auto_now_add=True, verbose_name='date of delivery')),
                ('comment', models.TextField(verbose_name='comment')),
                ('chart_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vardapp.charts', verbose_name='chart id')),
            ],
        ),
        migrations.CreateModel(
            name='FilesType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('files_type', models.IntegerField(choices=[(1, 'CSV'), (2, 'JSON'), (3, 'EXCEL'), (4, 'PDF'), (5, '...')])),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(1, 'Community'), (2, 'My Files'), (3, 'Best Practices')])),
            ],
        ),
        migrations.CreateModel(
            name='ReadComments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_reading', models.DateTimeField(auto_now_add=True, verbose_name='date of read')),
                ('comment_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vardapp.comments', verbose_name='id of comment')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='id of user')),
            ],
        ),
        migrations.CreateModel(
            name='Files',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='date of creation')),
                ('date_change', models.DateTimeField(auto_now=True, verbose_name='date of change')),
                ('date_delete', models.DateTimeField(auto_now=True, verbose_name='date of delete')),
                ('name', models.CharField(max_length=255, verbose_name='name of file')),
                ('link', models.CharField(max_length=255, verbose_name='link of file')),
                ('publish', models.IntegerField(choices=[(0, 'NO'), (1, 'YES')], default=0)),
                ('place_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vardapp.place', verbose_name='id of place file')),
                ('type_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vardapp.filestype', verbose_name='id type of file')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user id')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='date of creation')),
                ('theme', models.CharField(max_length=255, verbose_name='theme of feedback')),
                ('description', models.TextField(verbose_name='feedback')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user id')),
            ],
        ),
        migrations.CreateModel(
            name='Dushboards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='date of creation')),
                ('date_change', models.DateTimeField(auto_now=True, verbose_name='date of change')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user id')),
            ],
        ),
        migrations.AddField(
            model_name='comments',
            name='dushboard_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vardapp.dushboards', verbose_name='dushboard id'),
        ),
        migrations.AddField(
            model_name='comments',
            name='file_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vardapp.files', verbose_name='cells id'),
        ),
        migrations.AddField(
            model_name='comments',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user id'),
        ),
        migrations.CreateModel(
            name='Access',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_access_open', models.DateTimeField(auto_now=True, verbose_name='date access open')),
                ('date_access_close', models.DateTimeField(auto_now=True, verbose_name='date access close')),
                ('access_type_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vardapp.accesstype', verbose_name='access type id')),
                ('file_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vardapp.files', verbose_name='')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user id')),
            ],
        ),
    ]
