# Generated by Django 4.2.11 on 2024-07-30 13:22

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="name of user")),
                (
                    "email",
                    models.EmailField(
                        max_length=255, unique=True, verbose_name="email of user"
                    ),
                ),
                (
                    "date_creation",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="date of sign up"
                    ),
                ),
                (
                    "date_password_change",
                    models.DateTimeField(
                        auto_now=True, verbose_name="date of password change"
                    ),
                ),
                ("password", models.CharField(max_length=255, verbose_name="password")),
                ("is_staff", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                ("random_field", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Access",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "access_type_id",
                    models.IntegerField(
                        choices=[(1, "Reader"), (3, "Commentator"), (4, "Editor")],
                        verbose_name="access type id",
                    ),
                ),
                (
                    "date_access_open",
                    models.DateTimeField(
                        auto_now=True, verbose_name="date access open"
                    ),
                ),
                (
                    "date_access_close",
                    models.DateTimeField(
                        auto_now=True, verbose_name="date access close"
                    ),
                ),
                (
                    "owner_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="owner",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="owner id",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invited_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user id",
                    ),
                ),
            ],
            options={
                "unique_together": {("owner_id", "user_id")},
            },
        ),
    ]
